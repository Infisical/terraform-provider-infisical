# Terraform Provider release workflow for Crossplane.
name: Release Crossplane

on:
  push:
    tags:
      - "crossplane-tf-provider/v*"

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          fetch-depth: 0

      - uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        with:
          go-version-file: "go.mod"
          cache: true

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10.4"

      - name: Replace resource files for Crossplane
        run: |
          chmod +x ./scripts/prepare-crossplane.sh
          ./scripts/prepare-crossplane.sh

      - name: Zip regenerated docs
        run: |
          zip -r crossplane-tf-provider-docs.zip docs/

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@72b6676b71ab476b77e676928516f6982eef7a41 # v5.3.0
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser-pro
          version: v1.26.2-pro
          args: release --clean --config .goreleaser-crossplane.yml --skip-validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GORELEASER_KEY: ${{ secrets.GO_RELEASER_PRO_KEY }}

      - name: Upload docs to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: crossplane-tf-provider-docs.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
