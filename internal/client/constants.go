package infisicalclient

import "errors"

const (
	USER_AGENT                                              = "terraform"
	INFISICAL_MACHINE_IDENTITY_ID_NAME                      = "INFISICAL_MACHINE_IDENTITY_ID"
	INFISICAL_OIDC_AUTH_TOKEN_NAME                          = "INFISICAL_OIDC_AUTH_TOKEN_NAME"
	INFISICAL_KUBERNETES_SERVICE_ACCOUNT_TOKEN_NAME         = "INFISICAL_KUBERNETES_SERVICE_ACCOUNT_TOKEN"
	INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET_NAME             = "INFISICAL_UNIVERSAL_AUTH_CLIENT_SECRET"
	INFISICAL_UNIVERSAL_AUTH_CLIENT_ID_NAME                 = "INFISICAL_UNIVERSAL_AUTH_CLIENT_ID"
	INFISICAL_TOKEN_NAME                                    = "INFISICAL_TOKEN"
	INFISICAL_SERVICE_TOKEN_NAME                            = "INFISICAL_SERVICE_TOKEN"
	INFISICAL_HOST_NAME                                     = "INFISICAL_HOST"
	INFISICAL_AUTH_JWT_NAME                                 = "INFISICAL_AUTH_JWT"
	INFISICAL_KUBERNETES_SERVICE_ACCOUNT_TOKEN_PATH_NAME    = "INFISICAL_KUBERNETES_SERVICE_ACCOUNT_TOKEN_PATH"
	INFISICAL_KUBERNETES_SERVICE_ACCOUNT_DEFAULT_TOKEN_PATH = "/var/run/secrets/kubernetes.io/serviceaccount/token"
)

const AWS_MAPPING_BEHAVIOR_MANY_TO_ONE = "many-to-one"
const AWS_MAPPING_BEHAVIOR_ONE_TO_ONE = "one-to-one"

var (
	ErrNotFound = errors.New("resource not found")
)
